import 'reflect-metadata';
import { DomainResource } from '../base/DomainResource';
import { Element } from '../base/Element';
import { Annotation } from '../elements/Annotation';
import { CodeableConcept } from '../elements/CodeableConcept';
import { DeviceRequestParameter } from '../backbone/DeviceRequestParameter';
import { Identifier } from '../elements/Identifier';
import { Period } from '../elements/Period';
import { Reference } from '../elements/Reference';
import { Timing } from '../backbone/Timing';
export declare class DeviceRequest extends DomainResource {
    readonly resourceType: "DeviceRequest";
    authoredOn?: string;
    _authoredOn?: Element;
    basedOn?: Reference[];
    codeReference?: Reference;
    codeCodeableConcept?: CodeableConcept;
    encounter?: Reference;
    groupIdentifier?: Identifier;
    identifier?: Identifier[];
    instantiatesCanonical?: string[];
    _instantiatesCanonical?: Element[];
    instantiatesUri?: string[];
    _instantiatesUri?: Element[];
    insurance?: Reference[];
    intent?: ('proposal' | 'plan' | 'directive' | 'order' | 'original-order' | 'reflex-order' | 'filler-order' | 'instance-order' | 'option');
    _intent?: Element;
    note?: Annotation[];
    occurrenceDateTime?: string;
    _occurrenceDateTime?: Element;
    occurrencePeriod?: Period;
    occurrenceTiming?: Timing;
    parameter?: DeviceRequestParameter[];
    performer?: Reference;
    performerType?: CodeableConcept;
    priority?: ('routine' | 'urgent' | 'asap' | 'stat');
    _priority?: Element;
    constructor(source?: Partial<DeviceRequest>);
}
//# sourceMappingURL=DeviceRequest.d.ts.map