import 'reflect-metadata';
import { BackboneElement } from '../base/BackboneElement';
import { CodeableConcept } from '../elements/CodeableConcept';
import { DataRequirement } from '../elements/DataRequirement';
import { PlanDefinitionActionCondition } from './PlanDefinitionActionCondition';
import { PlanDefinitionActionDynamicValue } from './PlanDefinitionActionDynamicValue';
import { PlanDefinitionActionParticipant } from './PlanDefinitionActionParticipant';
import { PlanDefinitionActionRelatedAction } from './PlanDefinitionActionRelatedAction';
import { RelatedArtifact } from '../elements/RelatedArtifact';
export declare class PlanDefinitionAction extends BackboneElement {
    action?: PlanDefinitionAction[];
    cardinalityBehavior?: ('single' | 'multiple');
    _cardinalityBehavior?: Element;
    code?: CodeableConcept[];
    condition?: PlanDefinitionActionCondition[];
    definitionCanonical?: string;
    _definitionCanonical?: Element;
    definitionUri?: string;
    _definitionUri?: Element;
    description?: string;
    _description?: Element;
    documentation?: RelatedArtifact[];
    dynamicValue?: PlanDefinitionActionDynamicValue[];
    goalId?: string[];
    _goalId?: Element[];
    groupingBehavior?: ('visual-group' | 'logical-group' | 'sentence-group');
    _groupingBehavior?: Element;
    input?: DataRequirement[];
    output?: DataRequirement[];
    participant?: PlanDefinitionActionParticipant[];
    precheckBehavior?: ('yes' | 'no');
    _precheckBehavior?: Element;
    prefix?: string;
    _prefix?: Element;
    priority?: ('routine' | 'urgent' | 'asap' | 'stat');
    _priority?: Element;
    reason?: CodeableConcept[];
    relatedAction?: PlanDefinitionActionRelatedAction[];
    requiredBehavior?: ('must' | 'could' | 'must-unless-documented');
    _requiredBehavior?: Element;
    constructor(source?: Partial<PlanDefinitionAction>);
}
//# sourceMappingURL=PlanDefinitionAction.d.ts.map