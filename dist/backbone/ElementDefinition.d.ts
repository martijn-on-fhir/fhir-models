import 'reflect-metadata';
import { BackboneElement } from '../base/BackboneElement';
import { Element } from '../base/Element';
import { Coding } from '../elements/Coding';
import { ElementDefinitionBase } from '../elements/ElementDefinitionBase';
import { ElementDefinitionBinding } from '../elements/ElementDefinitionBinding';
import { ElementDefinitionConstraint } from '../elements/ElementDefinitionConstraint';
export declare class ElementDefinition extends BackboneElement {
    alias?: string[];
    _alias?: Element[];
    base?: ElementDefinitionBase;
    binding?: ElementDefinitionBinding;
    code?: Coding[];
    comment?: string;
    _comment?: Element;
    condition?: string[];
    _condition?: Element[];
    constraint?: ElementDefinitionConstraint[];
    contentReference?: string;
    _contentReference?: Element;
    defaultValueBase64Binary?: string;
    _defaultValueBase64Binary?: Element;
    defaultValueBoolean?: boolean;
    _defaultValueBoolean?: Element;
    defaultValueCanonical?: string;
    _defaultValueCanonical?: Element;
    defaultValueCode?: string;
    _defaultValueCode?: Element;
    defaultValueDate?: string;
    _defaultValueDate?: Element;
    defaultValueDateTime?: string;
    _defaultValueDateTime?: Element;
    defaultValueDecimal?: number;
    defaultValueId?: string;
    _defaultValueId?: Element;
    defaultValueInstant?: string;
    _defaultValueInstant?: Element;
    defaultValueInteger?: number;
    constructor(source?: Partial<ElementDefinition>);
}
//# sourceMappingURL=ElementDefinition.d.ts.map