import 'reflect-metadata';
import { DomainResource } from '../base/DomainResource';
import { Element } from '../base/Element';
import { Annotation } from '../elements/Annotation';
import { ChargeItemPerformer } from '../backbone/ChargeItemPerformer';
import { CodeableConcept } from '../elements/CodeableConcept';
import { Identifier } from '../elements/Identifier';
import { Money } from '../elements/Money';
import { Period } from '../elements/Period';
import { Reference } from '../elements/Reference';
import { Timing } from '../backbone/Timing';
export declare class ChargeItem extends DomainResource {
    readonly resourceType: "ChargeItem";
    account?: Reference[];
    bodysite?: CodeableConcept[];
    code?: CodeableConcept;
    context?: Reference;
    costCenter?: Reference;
    definitionCanonical?: string[];
    _definitionCanonical?: Element[];
    definitionUri?: string[];
    _definitionUri?: Element[];
    enteredDate?: string;
    _enteredDate?: Element;
    enterer?: Reference;
    factorOverride?: number;
    identifier?: Identifier[];
    note?: Annotation[];
    occurrenceDateTime?: string;
    _occurrenceDateTime?: Element;
    occurrencePeriod?: Period;
    occurrenceTiming?: Timing;
    overrideReason?: string;
    _overrideReason?: Element;
    partOf?: Reference[];
    performer?: ChargeItemPerformer[];
    performingOrganization?: Reference;
    priceOverride?: Money;
    constructor(source?: Partial<ChargeItem>);
}
//# sourceMappingURL=ChargeItem.d.ts.map