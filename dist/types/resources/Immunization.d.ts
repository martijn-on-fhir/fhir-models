import 'reflect-metadata';
import { DomainResource } from '../base/DomainResource';
import { Element } from '../base/Element';
import { Annotation } from '../elements/Annotation';
import { CodeableConcept } from '../elements/CodeableConcept';
import { Identifier } from '../elements/Identifier';
import { ImmunizationEducation } from '../backbone/ImmunizationEducation';
import { ImmunizationPerformer } from '../backbone/ImmunizationPerformer';
import { ImmunizationProtocolApplied } from '../backbone/ImmunizationProtocolApplied';
import { ImmunizationReaction } from '../backbone/ImmunizationReaction';
import { Quantity } from '../elements/Quantity';
import { Reference } from '../elements/Reference';
export declare class Immunization extends DomainResource {
    readonly resourceType: "Immunization";
    doseQuantity?: Quantity;
    education?: ImmunizationEducation[];
    encounter?: Reference;
    expirationDate?: string;
    _expirationDate?: Element;
    fundingSource?: CodeableConcept;
    identifier?: Identifier[];
    isSubpotent?: boolean;
    _isSubpotent?: Element;
    location?: Reference;
    lotNumber?: string;
    _lotNumber?: Element;
    manufacturer?: Reference;
    note?: Annotation[];
    occurrenceDateTime?: string;
    _occurrenceDateTime?: Element;
    occurrenceString?: string;
    _occurrenceString?: Element;
    patient?: Reference;
    performer?: ImmunizationPerformer[];
    primarySource?: boolean;
    _primarySource?: Element;
    programEligibility?: CodeableConcept[];
    protocolApplied?: ImmunizationProtocolApplied[];
    reaction?: ImmunizationReaction[];
    constructor(source?: Partial<Immunization>);
}
//# sourceMappingURL=Immunization.d.ts.map