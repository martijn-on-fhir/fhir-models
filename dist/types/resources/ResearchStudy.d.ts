import 'reflect-metadata';
import { DomainResource } from '../base/DomainResource';
import { Element } from '../base/Element';
import { Annotation } from '../elements/Annotation';
import { CodeableConcept } from '../elements/CodeableConcept';
import { ContactDetail } from '../elements/ContactDetail';
import { Identifier } from '../elements/Identifier';
import { Period } from '../elements/Period';
import { Reference } from '../elements/Reference';
import { RelatedArtifact } from '../elements/RelatedArtifact';
import { ResearchStudyArm } from '../backbone/ResearchStudyArm';
import { ResearchStudyObjective } from '../backbone/ResearchStudyObjective';
export declare class ResearchStudy extends DomainResource {
    readonly resourceType: "ResearchStudy";
    arm?: ResearchStudyArm[];
    category?: CodeableConcept[];
    condition?: CodeableConcept[];
    contact?: ContactDetail[];
    description?: string;
    _description?: Element;
    enrollment?: Reference[];
    focus?: CodeableConcept[];
    identifier?: Identifier[];
    keyword?: CodeableConcept[];
    location?: CodeableConcept[];
    note?: Annotation[];
    objective?: ResearchStudyObjective[];
    partOf?: Reference[];
    period?: Period;
    phase?: CodeableConcept;
    primaryPurposeType?: CodeableConcept;
    principalInvestigator?: Reference;
    protocol?: Reference[];
    reasonStopped?: CodeableConcept;
    relatedArtifact?: RelatedArtifact[];
    site?: Reference[];
    sponsor?: Reference;
    status?: ('active' | 'administratively-completed' | 'approved' | 'closed-to-accrual' | 'closed-to-accrual-and-intervention' | 'completed' | 'disapproved' | 'in-review' | 'temporarily-closed-to-accrual' | 'temporarily-closed-to-accrual-and-intervention' | 'withdrawn');
    _status?: Element;
    constructor(source?: Partial<ResearchStudy>);
}
//# sourceMappingURL=ResearchStudy.d.ts.map